# Query to add students to the database
sql.enroll=insert into student (first_name, last_name, sat, gpa) values (?, ?, ?, ?)

# Store the id of a student once
sql.student.id=select id from student where first_name = ? and last_name = ? and sat = ? and gpa = ?

# Find the id of a major from its description
sql.major.id=select id, req_sat from major where description = ?

# Query to update a student's major if necessary
sql.update.major=update student set major_id = ? where id = ?

# Grab all the major ids for use in splitting the class list
sql.list.major=select id from major

# Grab all class ids for each major
sql.split.major=select class_id from major_class_relationship where major_id = ?

# The registration query
sql.register=insert into student_class_relationship (student_id, class_id) values (?, ?)

# Registration via class description
sql.register.procedure=create procedure `register_by_description` (in s_id int, in sub varchar(20), in sec int) \
                       begin \
                       declare id int; \
                       select class_id into id from class where subject = sub and section = sec; \
                       insert into student_class_relationship (student_id, class_id) values (s_id, id); \
                       end

# List the classes the student has registered for
sql.list.classes=select scr.class_id, c.subject, c.section, ifnull(concat(i.last_name, ', ', i.first_name), 'OPEN') as name \
                 from student_class_relationship scr join class c on scr.class_id = c.id \
                 left join instructor i on c.instructor_id = i.id \
                 where student_id = ? \
                 order by scr.class_id                

# Look up the required sat score for the major
sql.major.sat=select req_sat from major where id = ? or description = ?

# Query for determining whether a given class is a major requirement
sql.major.req=select class_id \
              from major_class_relationship \
              where class_id = ? and major_id = ?

# List the majors that a student is eligible to choose based on the sat score
sql.eligible.major=select description, req_sat from major where req_sat <= ? order by req_sat desc